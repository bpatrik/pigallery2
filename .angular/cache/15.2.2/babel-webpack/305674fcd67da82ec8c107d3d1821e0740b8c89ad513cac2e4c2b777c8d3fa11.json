{"ast":null,"code":"import _asyncToGenerator from \"E:/work/pigallery2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Router } from '@angular/router';\nimport { ShareService } from '../ui/gallery/share.service';\nimport { Config } from '../../../common/config/public/Config';\nimport { NavigationLinkTypes } from '../../../common/config/public/ClientConfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../ui/gallery/share.service\";\nexport let NavigationService = /*#__PURE__*/(() => {\n  class NavigationService {\n    constructor(router, shareService) {\n      this.router = router;\n      this.shareService = shareService;\n    }\n    isLoginPage() {\n      return this.router.isActive('login', {\n        paths: 'exact',\n        queryParams: 'exact',\n        fragment: 'ignored',\n        matrixParams: 'ignored'\n      }) || this.router.isActive('shareLogin', {\n        paths: 'exact',\n        queryParams: 'ignored',\n        fragment: 'ignored',\n        matrixParams: 'ignored'\n      });\n    }\n    toLogin() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield _this.shareService.wait();\n        if (_this.shareService.isSharing()) {\n          return _this.router.navigate(['shareLogin'], {\n            queryParams: {\n              sk: _this.shareService.getSharingKey()\n            }\n          });\n        } else {\n          return _this.router.navigate(['login']);\n        }\n      })();\n    }\n    toDefault() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        yield _this2.shareService.wait();\n        if (_this2.shareService.isSharing()) {\n          return _this2.router.navigate(['share', _this2.shareService.getSharingKey()]);\n        } else {\n          if (Config.Gallery.NavBar.links && Config.Gallery.NavBar.links.length > 0) {\n            switch (Config.Gallery.NavBar.links[0].type) {\n              case NavigationLinkTypes.gallery:\n                return _this2.router.navigate(['gallery', '']);\n              case NavigationLinkTypes.albums:\n                return _this2.router.navigate(['albums', '']);\n              case NavigationLinkTypes.faces:\n                return _this2.router.navigate(['faces', '']);\n              case NavigationLinkTypes.search:\n                return _this2.router.navigate(['search', JSON.stringify(Config.Gallery.NavBar.links[0].SearchQuery)]);\n            }\n          }\n          return _this2.router.navigate(['gallery', '']);\n        }\n      })();\n    }\n    toGallery() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        yield _this3.shareService.wait();\n        if (_this3.shareService.isSharing()) {\n          return _this3.router.navigate(['share', _this3.shareService.getSharingKey()]);\n        } else {\n          return _this3.router.navigate(['gallery', '']);\n        }\n      })();\n    }\n    search(searchText) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        return _this4.router.navigate(['search', searchText]);\n      })();\n    }\n  }\n  NavigationService.ɵfac = function NavigationService_Factory(t) {\n    return new (t || NavigationService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ShareService));\n  };\n  NavigationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NavigationService,\n    factory: NavigationService.ɵfac\n  });\n  return NavigationService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}