{"ast":null,"code":"export var SearchQueryTypes = /*#__PURE__*/(() => {\n  (function (SearchQueryTypes) {\n    SearchQueryTypes[SearchQueryTypes[\"AND\"] = 1] = \"AND\";\n    SearchQueryTypes[SearchQueryTypes[\"OR\"] = 2] = \"OR\";\n    SearchQueryTypes[SearchQueryTypes[\"SOME_OF\"] = 3] = \"SOME_OF\";\n    SearchQueryTypes[SearchQueryTypes[\"UNKNOWN_RELATION\"] = 99999] = \"UNKNOWN_RELATION\";\n    // non-text metadata\n    // |- range types\n    SearchQueryTypes[SearchQueryTypes[\"from_date\"] = 10] = \"from_date\";\n    SearchQueryTypes[SearchQueryTypes[\"to_date\"] = 11] = \"to_date\";\n    SearchQueryTypes[SearchQueryTypes[\"min_rating\"] = 12] = \"min_rating\";\n    SearchQueryTypes[SearchQueryTypes[\"max_rating\"] = 13] = \"max_rating\";\n    SearchQueryTypes[SearchQueryTypes[\"min_resolution\"] = 14] = \"min_resolution\";\n    SearchQueryTypes[SearchQueryTypes[\"max_resolution\"] = 15] = \"max_resolution\";\n    SearchQueryTypes[SearchQueryTypes[\"distance\"] = 16] = \"distance\";\n    SearchQueryTypes[SearchQueryTypes[\"orientation\"] = 17] = \"orientation\";\n    SearchQueryTypes[SearchQueryTypes[\"date_pattern\"] = 18] = \"date_pattern\";\n    // TEXT search types\n    SearchQueryTypes[SearchQueryTypes[\"any_text\"] = 100] = \"any_text\";\n    SearchQueryTypes[SearchQueryTypes[\"caption\"] = 101] = \"caption\";\n    SearchQueryTypes[SearchQueryTypes[\"directory\"] = 102] = \"directory\";\n    SearchQueryTypes[SearchQueryTypes[\"file_name\"] = 103] = \"file_name\";\n    SearchQueryTypes[SearchQueryTypes[\"keyword\"] = 104] = \"keyword\";\n    SearchQueryTypes[SearchQueryTypes[\"person\"] = 105] = \"person\";\n    SearchQueryTypes[SearchQueryTypes[\"position\"] = 106] = \"position\";\n  })(SearchQueryTypes || (SearchQueryTypes = {}));\n  return SearchQueryTypes;\n})();\nexport const ListSearchQueryTypes = [SearchQueryTypes.AND, SearchQueryTypes.OR, SearchQueryTypes.SOME_OF];\nexport const TextSearchQueryTypes = [SearchQueryTypes.any_text, SearchQueryTypes.caption, SearchQueryTypes.directory, SearchQueryTypes.file_name, SearchQueryTypes.keyword, SearchQueryTypes.person, SearchQueryTypes.position];\nexport const MinRangeSearchQueryTypes = [SearchQueryTypes.from_date, SearchQueryTypes.min_rating, SearchQueryTypes.min_resolution];\nexport const MaxRangeSearchQueryTypes = [SearchQueryTypes.to_date, SearchQueryTypes.max_rating, SearchQueryTypes.max_resolution];\nexport const RangeSearchQueryTypes = MinRangeSearchQueryTypes.concat(MaxRangeSearchQueryTypes);\nexport const MetadataSearchQueryTypes = [SearchQueryTypes.distance, SearchQueryTypes.orientation].concat(RangeSearchQueryTypes).concat(TextSearchQueryTypes);\nexport const rangedTypePairs = {};\nrangedTypePairs[SearchQueryTypes.from_date] = SearchQueryTypes.to_date;\nrangedTypePairs[SearchQueryTypes.min_rating] = SearchQueryTypes.max_rating;\nrangedTypePairs[SearchQueryTypes.min_resolution] = SearchQueryTypes.max_resolution;\n// add the other direction too\nfor (const key of Object.keys(rangedTypePairs)) {\n  rangedTypePairs[rangedTypePairs[key]] = key;\n}\nexport var TextSearchQueryMatchTypes = /*#__PURE__*/(() => {\n  (function (TextSearchQueryMatchTypes) {\n    TextSearchQueryMatchTypes[TextSearchQueryMatchTypes[\"exact_match\"] = 1] = \"exact_match\";\n    TextSearchQueryMatchTypes[TextSearchQueryMatchTypes[\"like\"] = 2] = \"like\";\n  })(TextSearchQueryMatchTypes || (TextSearchQueryMatchTypes = {}));\n  return TextSearchQueryMatchTypes;\n})();\nexport const SearchQueryDTOUtils = {\n  getRangedQueryPair: type => {\n    if (rangedTypePairs[type]) {\n      return rangedTypePairs[type];\n    }\n    throw new Error('Unknown ranged type');\n  },\n  negate: query => {\n    switch (query.type) {\n      case SearchQueryTypes.AND:\n        query.type = SearchQueryTypes.OR;\n        query.list = query.list.map(q => SearchQueryDTOUtils.negate(q));\n        return query;\n      case SearchQueryTypes.OR:\n        query.type = SearchQueryTypes.AND;\n        query.list = query.list.map(q => SearchQueryDTOUtils.negate(q));\n        return query;\n      case SearchQueryTypes.orientation:\n        query.landscape = !query.landscape;\n        return query;\n      case SearchQueryTypes.from_date:\n      case SearchQueryTypes.to_date:\n      case SearchQueryTypes.min_rating:\n      case SearchQueryTypes.max_rating:\n      case SearchQueryTypes.min_resolution:\n      case SearchQueryTypes.max_resolution:\n      case SearchQueryTypes.distance:\n      case SearchQueryTypes.any_text:\n      case SearchQueryTypes.person:\n      case SearchQueryTypes.position:\n      case SearchQueryTypes.keyword:\n      case SearchQueryTypes.caption:\n      case SearchQueryTypes.file_name:\n      case SearchQueryTypes.directory:\n        query.negate = !query.negate;\n        return query;\n      case SearchQueryTypes.SOME_OF:\n        throw new Error('Some of not supported');\n      default:\n        throw new Error('Unknown type' + query.type);\n    }\n  }\n};\nexport var DatePatternFrequency = /*#__PURE__*/(() => {\n  (function (DatePatternFrequency) {\n    DatePatternFrequency[DatePatternFrequency[\"every_week\"] = 1] = \"every_week\";\n    DatePatternFrequency[DatePatternFrequency[\"every_month\"] = 2] = \"every_month\";\n    DatePatternFrequency[DatePatternFrequency[\"every_year\"] = 3] = \"every_year\";\n    DatePatternFrequency[DatePatternFrequency[\"days_ago\"] = 10] = \"days_ago\";\n    DatePatternFrequency[DatePatternFrequency[\"weeks_ago\"] = 11] = \"weeks_ago\";\n    DatePatternFrequency[DatePatternFrequency[\"months_ago\"] = 12] = \"months_ago\";\n    DatePatternFrequency[DatePatternFrequency[\"years_ago\"] = 13] = \"years_ago\";\n  })(DatePatternFrequency || (DatePatternFrequency = {}));\n  return DatePatternFrequency;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}