{"ast":null,"code":"import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { AuthenticationService } from '../authentication.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../authentication.service\";\nexport let CSRFInterceptor = /*#__PURE__*/(() => {\n  class CSRFInterceptor {\n    constructor(authenticationService) {\n      this.authenticationService = authenticationService;\n    }\n    intercept(request, next) {\n      // add authorization header with jwt token if available\n      const currentUser = this.authenticationService.user.value;\n      if (currentUser && currentUser.csrfToken) {\n        request = request.clone({\n          setHeaders: {\n            'CSRF-Token': `${currentUser.csrfToken}`\n          }\n        });\n      }\n      return next.handle(request);\n    }\n  }\n  CSRFInterceptor.ɵfac = function CSRFInterceptor_Factory(t) {\n    return new (t || CSRFInterceptor)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n  CSRFInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CSRFInterceptor,\n    factory: CSRFInterceptor.ɵfac\n  });\n  return CSRFInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}