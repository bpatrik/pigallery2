{"ast":null,"code":"import { Config } from '../../../common/config/public/Config';\nimport { Title } from '@angular/platform-browser';\nimport { SearchQueryParserService } from '../ui/gallery/search/search-query-parser.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"../ui/gallery/search/search-query-parser.service\";\nexport let PiTitleService = /*#__PURE__*/(() => {\n  class PiTitleService {\n    constructor(titleService, searchQueryParserService) {\n      this.titleService = titleService;\n      this.searchQueryParserService = searchQueryParserService;\n      this.lastNonMedia = null;\n    }\n    setTitle(title) {\n      if (title) {\n        this.titleService.setTitle(Config.Server.applicationTitle + ' - ' + title);\n      } else {\n        this.titleService.setTitle(Config.Server.applicationTitle);\n      }\n    }\n    setSearchTitle(searchQuery) {\n      let query = searchQuery;\n      if (typeof searchQuery === 'string') {\n        query = JSON.parse(searchQuery);\n      }\n      this.lastNonMedia = this.searchQueryParserService.stringify(query);\n      this.setTitle(this.lastNonMedia);\n    }\n    setDirectoryTitle(path) {\n      this.lastNonMedia = path;\n      this.setTitle(this.lastNonMedia);\n    }\n    setMediaTitle(media) {\n      this.setTitle(media.getReadableRelativePath());\n    }\n    setLastNonMedia() {\n      if (this.lastNonMedia) {\n        this.setTitle(this.lastNonMedia);\n      }\n    }\n  }\n  PiTitleService.ɵfac = function PiTitleService_Factory(t) {\n    return new (t || PiTitleService)(i0.ɵɵinject(i1.Title), i0.ɵɵinject(i2.SearchQueryParserService));\n  };\n  PiTitleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PiTitleService,\n    factory: PiTitleService.ɵfac,\n    providedIn: 'root'\n  });\n  return PiTitleService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}