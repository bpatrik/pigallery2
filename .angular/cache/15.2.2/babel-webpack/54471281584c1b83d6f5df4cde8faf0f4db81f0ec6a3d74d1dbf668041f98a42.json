{"ast":null,"code":"import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationService } from '../authentication.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../authentication.service\";\nexport let ErrorInterceptor = /*#__PURE__*/(() => {\n  class ErrorInterceptor {\n    constructor(authenticationService) {\n      this.authenticationService = authenticationService;\n    }\n    intercept(request, next) {\n      return next.handle(request).pipe(catchError(err => {\n        if (err.status === 401) {\n          // auto logout if 401 response returned from api\n          this.authenticationService.logout();\n        }\n        const error = err.error.message || err.statusText;\n        return throwError(error);\n      }));\n    }\n  }\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n  ErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n  return ErrorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}