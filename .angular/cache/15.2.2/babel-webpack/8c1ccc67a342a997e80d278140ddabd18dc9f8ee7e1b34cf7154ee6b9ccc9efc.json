{"ast":null,"code":"import _asyncToGenerator from \"E:/work/pigallery2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { NetworkService } from './network.service';\nimport { Config } from '../../../../common/config/public/Config';\nimport { ShareService } from '../../ui/gallery/share.service';\nimport { QueryParams } from '../../../../common/QueryParams';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./network.service\";\nimport * as i2 from \"../../ui/gallery/share.service\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(networkService, shareService) {\n      this.networkService = networkService;\n      this.shareService = shareService;\n    }\n    logout() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        return _this.networkService.postJson('/user/logout');\n      })();\n    }\n    login(credential) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        return _this2.networkService.postJson('/user/login', {\n          loginCredential: credential\n        });\n      })();\n    }\n    shareLogin(password) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        return _this3.networkService.postJson('/share/login?' + QueryParams.gallery.sharingKey_query + '=' + _this3.shareService.getSharingKey(), {\n          password\n        });\n      })();\n    }\n    getSessionUser() {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        yield _this4.shareService.wait();\n        if (Config.Sharing.enabled === true) {\n          if (_this4.shareService.isSharing()) {\n            const query = {};\n            query[QueryParams.gallery.sharingKey_query] = _this4.shareService.getSharingKey();\n            return _this4.networkService.getJson('/user/me', query);\n          }\n        }\n        return _this4.networkService.getJson('/user/me');\n      })();\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.NetworkService), i0.ɵɵinject(i2.ShareService));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}