{"ast":null,"code":"import { Event } from '../../../../common/event/Event';\nimport * as i0 from \"@angular/core\";\nexport let FullScreenService = /*#__PURE__*/(() => {\n  class FullScreenService {\n    constructor() {\n      this.OnFullScreenChange = new Event();\n    }\n    isFullScreenEnabled() {\n      return !!(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement);\n    }\n    showFullScreen(element) {\n      if (this.isFullScreenEnabled()) {\n        return;\n      }\n      if (element.requestFullscreen) {\n        element.requestFullscreen().catch(console.error);\n      } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen();\n      } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n      } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n      }\n      this.OnFullScreenChange.trigger(true);\n    }\n    exitFullScreen() {\n      if (!this.isFullScreenEnabled()) {\n        return;\n      }\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      }\n      this.OnFullScreenChange.trigger(false);\n    }\n  }\n  FullScreenService.ɵfac = function FullScreenService_Factory(t) {\n    return new (t || FullScreenService)();\n  };\n  FullScreenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FullScreenService,\n    factory: FullScreenService.ɵfac\n  });\n  return FullScreenService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}