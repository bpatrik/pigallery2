{"ast":null,"code":"/* eslint-disable no-case-declarations */\nexport var JobTriggerType = /*#__PURE__*/(() => {\n  (function (JobTriggerType) {\n    JobTriggerType[JobTriggerType[\"never\"] = 1] = \"never\";\n    JobTriggerType[JobTriggerType[\"scheduled\"] = 2] = \"scheduled\";\n    JobTriggerType[JobTriggerType[\"periodic\"] = 3] = \"periodic\";\n    JobTriggerType[JobTriggerType[\"after\"] = 4] = \"after\";\n  })(JobTriggerType || (JobTriggerType = {}));\n  return JobTriggerType;\n})();\nexport const JobScheduleDTOUtils = {\n  getNextDayOfTheWeek: (refDate, dayOfWeek) => {\n    const date = new Date(refDate);\n    date.setDate(refDate.getDate() + (dayOfWeek + 1 + 7 - refDate.getDay()) % 7);\n    if (date.getDay() === refDate.getDay()) {\n      return new Date(refDate);\n    }\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  },\n  nextValidDate: (date, h, m, dayDiff) => {\n    date.setUTCSeconds(0);\n    date.setUTCMilliseconds(0);\n    if (date.getUTCHours() < h || date.getUTCHours() === h && date.getUTCMinutes() < m) {\n      date.setUTCHours(h);\n      date.setUTCMinutes(m);\n    } else {\n      date.setTime(date.getTime() + dayDiff);\n      date.setUTCHours(h);\n      date.setUTCMinutes(m);\n    }\n    return date;\n  },\n  getNextRunningDate: (refDate, schedule) => {\n    switch (schedule.trigger.type) {\n      case JobTriggerType.scheduled:\n        return new Date(schedule.trigger.time);\n      case JobTriggerType.periodic:\n        const hour = Math.min(23, Math.floor(schedule.trigger.atTime / 60));\n        const minute = schedule.trigger.atTime % 60;\n        if (schedule.trigger.periodicity <= 6) {\n          // Between Monday and Sunday\n          const nextRunDate = JobScheduleDTOUtils.getNextDayOfTheWeek(refDate, schedule.trigger.periodicity);\n          return JobScheduleDTOUtils.nextValidDate(nextRunDate, hour, minute, 7 * 24 * 60 * 60 * 1000);\n        }\n        // every day\n        return JobScheduleDTOUtils.nextValidDate(new Date(refDate), hour, minute, 24 * 60 * 60 * 1000);\n    }\n    return null;\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}