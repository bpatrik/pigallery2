{"ast":null,"code":"import { DivIcon, setOptions } from 'leaflet';\nconst SvgIcon = DivIcon.extend({\n  initialize: function (options = {}) {\n    options.color = options.color || 'var(--bs-primary)';\n    options.svgPath = options.svgPath || 'M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512z';\n    options.viewBox = options.viewBox || '0 0 512 512';\n    const svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"' + options.viewBox + '\"><path fill=\"' + options.color + '\" d=\"' + options.svgPath + '\"/></svg>';\n    setOptions(this, {\n      iconSize: options.small ? [15, 15] : [30, 30],\n      iconAnchor: options.small ? [15, 28] : [15, 35],\n      popupAnchor: options.small ? [0, -15] : [0, -30],\n      className: 'custom-div-icon' + (options.small ? ' marker-svg-small' : ''),\n      html: '<div class=\"marker-svg-wrapper\"><div class=\"marker-svg-shadow\"></div>' + '<div  class=\"marker-svg-pin\" style=\"border-color: ' + options.color + '\">' + '</div>' + svg + '</div>'\n    });\n  }\n});\nexport class MarkerFactory {\n  static getSvgIcon(options) {\n    return new SvgIcon(options);\n  }\n}\nMarkerFactory.defIcon = MarkerFactory.getSvgIcon();\nMarkerFactory.defIconSmall = MarkerFactory.getSvgIcon({\n  small: true\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}