{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-bootstrap/timepicker\";\nexport let TimeStampTimePickerComponent = /*#__PURE__*/(() => {\n  class TimeStampTimePickerComponent {\n    constructor() {\n      this.timestampValue = 0;\n      this.timestampChange = new EventEmitter();\n      this.date = new Date();\n      this.date.setUTCSeconds(0);\n      this.date.setUTCMilliseconds(0);\n    }\n    get timestamp() {\n      return this.timestampValue;\n    }\n    set timestamp(val) {\n      const h = Math.min(23, Math.floor(val / 60));\n      const m = val % 60;\n      this.date.setUTCHours(h);\n      this.date.setUTCMinutes(m);\n      if (this.timestampValue === val) {\n        return;\n      }\n      this.timestampValue = val;\n      this.timestampChange.emit(this.timestampValue);\n    }\n    onChange(date) {\n      const d = new Date(date);\n      this.timestamp = d.getUTCHours() * 60 + d.getUTCMinutes();\n    }\n  }\n  TimeStampTimePickerComponent.ɵfac = function TimeStampTimePickerComponent_Factory(t) {\n    return new (t || TimeStampTimePickerComponent)();\n  };\n  TimeStampTimePickerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimeStampTimePickerComponent,\n    selectors: [[\"app-timestamp-timepicker\"]],\n    inputs: {\n      name: \"name\",\n      timestamp: \"timestamp\"\n    },\n    outputs: {\n      timestampChange: \"timestampChange\"\n    },\n    decls: 1,\n    vars: 6,\n    consts: [[\"required\", \"\", 3, \"name\", \"ngModel\", \"showSpinners\", \"showMeridian\", \"mousewheel\", \"arrowkeys\", \"ngModelChange\"]],\n    template: function TimeStampTimePickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"timepicker\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TimeStampTimePickerComponent_Template_timepicker_ngModelChange_0_listener($event) {\n          return ctx.onChange($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"name\", ctx.name)(\"ngModel\", ctx.date)(\"showSpinners\", false)(\"showMeridian\", false)(\"mousewheel\", true)(\"arrowkeys\", true);\n      }\n    },\n    dependencies: [i1.NgControlStatus, i1.RequiredValidator, i1.NgModel, i2.TimepickerComponent],\n    encapsulation: 2\n  });\n  return TimeStampTimePickerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}